name: Dialed-In-Backend-CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DATABASE_DRIVER: ${{ vars.DATABASE_DRIVER }}
  DATABASE_HOST: ${{ vars.DATABASE_HOST }}
  POSTGRES_USER: ${{ vars.POSTGRES_USER }}
  POSTGRES_DB: ${{ vars.POSTGRES_DB }}
  POSTGRES_PORT: ${{ vars.POSTGRES_PORT }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
  SMTP_USERNAME: ${{ vars.SMTP_USERNAME }}
  SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Dialed-In-Backend-CI

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.22.4

    - name: Setup and export .env file
      run: |
        echo DATABASE_DRIVER=${{ vars.DATABASE_DRIVER }} >> .env
        echo DATABASE_HOST=${{ vars.DATABASE_HOST }} >> .env
        echo POSTGRES_USER=${{ vars.POSTGRES_USER }} >> .env
        echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
        echo POSTGRES_DB=${{ vars.POSTGRES_DB }} >> .env
        echo POSTGRES_PORT=${{ vars.POSTGRES_PORT }} >> .env
        echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> .env
        echo TEST_DATABASE_URL=${{ secrets.TEST_DATABASE_URL }} >> .env
        echo SMTP_USERNAME=${{ vars.SMTP_USERNAME }} >> .env
        echo SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }} >> .env
        set -a
        source .env
        set +a

    - name: Build Docker image
      run: docker compose --env-file .env build

    - name: Run Docker Compose
      run: docker compose --env-file .env up -d

    - name: Sleep for 20 seconds
      run: sleep 20s

    - name: Run Tests
      run: make test-all
